@page "/NotificationOverview"
@using AI4E.AspNetCore.Components.Notifications
@implements IDisposable
@inject NotificationManager NotificationManager
@code
{
    private IReadOnlyList<Notification> Notifications { get; set; }

    protected override void OnInitialized()
    {
        NotificationManager.PlaceNotification(new NotificationMessage(NotificationType.None, "This notification should never be displayed.", allowDismiss: true));
        NotificationManager.PlaceNotification(new NotificationMessage(NotificationType.Info, "This is an informational notification.", allowDismiss: true));
        NotificationManager.PlaceNotification(new NotificationMessage(NotificationType.Success, "This notification informs about a success.", allowDismiss: true));
        NotificationManager.PlaceNotification(new NotificationMessage(NotificationType.Warning, "This notification indicates a warning."));
        NotificationManager.PlaceNotification(new NotificationMessage(NotificationType.Danger, "The application is in a dangerous state."));

        UpdateNotifications();
    }

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            NotificationManager.NotificationsChanged += OnNotificationsChanged;
        }
    }

    private void OnNotificationsChanged(object sender, EventArgs e)
    {
        UpdateNotifications();
        StateHasChanged();
    }

    public void Dispose()
    {
        NotificationManager.NotificationsChanged -= OnNotificationsChanged;
    }

    private void UpdateNotifications()
    {
        var notifications = NotificationManager.Notifications;
        Notifications = (notifications as IReadOnlyList<Notification>) ?? notifications.ToList();
    }

    private static string FormatNotificationTitle(in Notification notification)
    {
        if (!string.IsNullOrWhiteSpace(notification.Message))
        {
            return notification.Message;
        }

        return notification.NotificationType.ToString();
    }
}

<h3>Notifications</h3>

@if (Notifications.Any())
{
    <ul class="notifications">
        @for (var i = 0; i < Notifications.Count; i++)
        {
            var notification = Notifications[i];
            <li class="notification">
                <div class="media">
                    <div class="mr-2" style="width:50px; height:50px; display: flex; align-items:center; justify-content:center">
                        @if (notification.NotificationType == NotificationType.Info)
                        {
                            <span class="oi oi-info" aria-hidden="true"></span>
                        }
                        else if (notification.NotificationType == NotificationType.Success)
                        {
                            <span class="oi oi-check" aria-hidden="true"></span>
                        }
                        else if (notification.NotificationType == NotificationType.Warning)
                        {
                            <span class="oi oi-warning" aria-hidden="true"></span>
                        }
                        else if (notification.NotificationType == NotificationType.Danger)
                        {
                            <span class="oi oi-x" aria-hidden="true"></span>
                        }
                    </div>

                    <div class="media-body">
                        <strong class="notification-title">@FormatNotificationTitle(notification)</strong>

                        <p class="notification-desc">Resolution: Fixed, Work log: 4h</p>

                        <div class="notification-meta">
                            <small class="timestamp">27. 10. 2015, 08:00</small>
                        </div>
                    </div>

                    @if (notification.AllowDismiss)
                    {
                        <button class="btn btn-outline-primary" @onclick="notification.Dismiss">
                            <span class="oi oi-x" aria-hidden="true"></span>
                            <span class="none-sm">
                                Dismiss
                            </span>
                        </button>
                    }


                </div>
            </li>
        }
    </ul>
}
else
{
    <h4>No notifications!</h4>
}


@*<li class="notification">
        <div class="media">
            <img data-src="holder.js/50x50?bg=cccccc" class="mr-2 img-circle" alt="Name">
            <div class="media-body">
                <strong class="notification-title"><a href="#">Dave Lister</a> commented on <a href="#">DWARF-13 - Maintenance</a></strong>
                <p class="notification-desc">I totally don't wanna do it. Rimmer can do it.</p>

                <div class="notification-meta">
                    <small class="timestamp">27. 11. 2015, 15:00</small>
                </div>
            </div>
        </div>
    </li>*@
